set-option -g history-limit 100000

# reload config without killing server
bind R source-file ~/.tmux.conf \; display-message "  Config reloaded...".

# default window title colors
set-window-option -g window-status-style fg=colour244,bg=default,dim

# active window title colors
set-window-option -g window-status-current-style fg=colour166,bg=default,bright

# pane border
set-option -g pane-border-style fg=colour235,fg=colour240

# message text
set-option -g message-style bg=colour235,fg=colour167 #orange

# pane number display
set-option -g display-panes-active-colour colour33 #blue
set-option -g display-panes-colour colour166 #orange

# clock
set-window-option -g clock-mode-colour green #green

# status bar
# https://github.com/seebi/tmux-colors-solarized/blob/master/tmuxcolors-256.conf
set-option -g status-style bg=black,fg=colour136,default
set -g status-interval 1
set -g status-justify centre # center align window list
set -g status-left-length 0
# set -g status-right-length 20
# set -g status-left '#(pwd)'
set -g status-right '#{ram_fg_color} RAM: #{ram_icon} #{ram_percentage} | #{cpu_fg_color} CPU: #{cpu_icon} #{cpu_percentage} | #[fg=white,bg=default]%l:%M:%S %p#[default]'

# C-b is not acceptable -- Vim uses it
unbind C-b
set-option -g prefix C-a
bind-key -n C-t send-prefix
bind-key C-a last-window

# rearrange windows
bind-key -n C-S-Left swap-window -t -1
bind-key -n C-S-Right swap-window -t +1

# set window split
bind-key b split-window -h -c "#{pane_current_path}"
bind-key v split-window -v -c "#{pane_current_path}"
bind c new-window -c "#{pane_current_path}"
bind-key a split-window -v -p 66

# Start numbering at 1
set -g base-index 1
set-window-option -g pane-base-index 1

# renumber windows sequentially after closing any of them
set -g renumber-windows on

# Allows for faster key repetition
set -s escape-time 0

# Rather than constraining window size to the maximum size of any client 
# connected to the *session*, constrain window size to the maximum size of any 
# client connected to *that window*. Much more reasonable.
# setw -g aggressive-resize on

# Activity monitoring
setw -g monitor-activity on
set -g visual-activity on

# Vi copypaste mode
set-window-option -g mode-keys vi
bind-key -T copy-mode-vi 'v' send-keys -X begin-selection
bind-key -T copy-mode-vi 'y' send-keys -X copy-pipe-and-cancel 'reattach-to-user-namespace pbcopy'
bind-key 'p' run-shell "tmux set-buffer \"$(pbpaste)\";tmux past-buffer"
bind-key 'y' send-keys x\; run-shell "tmux show-buffer | pbcopy"\; display-message "copied"
# Update default binding of `Enter` to also use copy-pipe
unbind-key -T copy-mode-vi Enter
bind-key -T copy-mode-vi Enter send-keys -X copy-pipe-and-cancel 'reattach-to-user-namespace pbcopy'


# hjkl pane traversal
bind h select-pane -L
bind j select-pane -D
bind k select-pane -U
bind l select-pane -R

# auto window rename
set-window-option -g automatic-rename on

# color
set -g default-terminal "screen-256color"

# mouse
setw -g mouse on

# Deploy
bind-key C-D find-window 'deploys' \; \
  send-keys -t deploys 'clear' 

set -g @tmux_window_name_shells "['zsh', 'bash', 'sh']"
set -g @tmux_window_dir_programs "['nvim', 'vim', 'vi', 'git']"

set -g @continuum-boot 'on'
set -g @continuum-boot-options 'iterm'

# list of plugins managed by tpm
set -g @tpm_plugins '                 \
  tmux-plugins/tpm                    \
  tmux-plugins/tmux-cpu               \
  tmux-plugins/tmux-sensible          \
  tmux-plugins/tmux-resurrect         \
  tmux-plugins/tmux-continuum         \
  tmux-plugins/tmux-yank              \
  '

# Initialize TMUX plugin manager (keep this line at the very bottom of tmux.conf)
run '~/.tmux/plugins/tpm/tpm'
